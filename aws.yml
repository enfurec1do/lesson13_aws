---
- name: Create aws nginx instance
  hosts: localhost
  tasks:
  - name: Ensure boto and boto3 modules are installed
    pip:
      name: "{{ item }}"
    with_items:
      - boto3
      - botocore

  - ec2_instance:
      state: absent
      filters:
        "tag:role": NGINX 
    ignore_errors: yes

  - name: Create a new ec2 key pair, returns generated private key
    ec2_key:
      name: my_keypair
    register: key_result

  - name: Save key pair 
    copy: 
      content: "{{ key_result.key.private_key }}"
      dest: "/root/.ssh/my_keypair.pem" 
      mode: 0400
    when: key_result.changed

  - name: Create security group
    ec2_group:
      name: EC2SG_NGINX
      description: sg with rule descriptions
      region: us-east-2
      state: present
      rules:
        - proto: tcp
          ports:
            - 80
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on port 80
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 
            - 130.193.0.0/16
            - 84.201.0.0/16
    register: result_sg

  - debug:
     var: result_sg

  - ec2:
      key_name: my_keypair
      security_group: EC2SG_NGINX
      network:
        assign_public_ip: true
      volumes:
      - device_name: /dev/sdh
        ebs:
          volume_size: 15
          delete_on_termination: true
      instance_type: t2.micro
      image_id: ami-013de1b045799b282
      wait: yes
      wait_timeout: 500
      count: 3
      instance_tags:
        role: "NGINX"
    register: result_instance

  - debug:
     var: result_instance

#   - ec2_instance_info:
#       filters:
#         "tag:role": NGINX 
#     register: result_instance_info

#   - debug:
#       var: result_instance_info

  - set_fact:
      instance_ips: "{{ result_instance | json_query('instances[*].public_ip') }}"

  - name: Add host to group 'ec2_nginx'
    add_host:
       name: '{{ item }}'
       groups: ec2_nginx
    with_items: '{{instance_ips}}'

- name: deploy nginx
  hosts: ec2_nginx
  tasks:
    - name: Ensure nginx is installed
      apt:
        name: nginx
        state: present
    - name: Copy hello page
      copy:
        src: index.nginx-debian.html
        dest: /var/www/html/index.nginx-debian.html
        follow: yes
      notify:
        - restart nginx

- handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted